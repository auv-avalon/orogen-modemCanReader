name "modem_can"
version "0.0"

import_types_from "base"
using_library "communication"


if has_typekit?('canbus')
import_types_from "canbus"
task_context "Task" do

    property 'scale','double',2.5
    needs_configuration

    property("sendInterval","double",5.0).
	doc("time how often an position message should be send")

    input_port("modem_in", "string").
        needs_reliable_connection

    output_port("modem_out", "string")
    
    input_port("canModem", "canbus/Message").
        needs_reliable_connection.
        doc("Input port for Modem messages from the CAN dispatcher module")
    
    output_port("canOut", "canbus/Message").
        doc("Outgoing messages for the modem")

    output_port("motion_command", "base/AUVMotionCommand").
        doc("Motion command that is submittet by the nurc, and zero speed")
    
    input_port("light_value", "/bool").
        doc("indicates the current light-value from the nurc")

     input_port('position_samples', '/base/samples/RigidBodyState').
	doc("Current Position of the vehicle it's send via the modem each time an sample here is recived, thhis include also the light_value")


    port_driven
end
else
    STDERR.puts "WARN: the Remote task will be disabled as the canbus orogen component is not present"
end


### For testing
using_task_library "canbus"
#using_task_library "hbridge"
#using_task_library "controldev"
#using_task_library "sysmon"

deployment 'modem_test' do

###Old Deployment
#deployment 'ocu_test_orocos' do
#    task("hbridge", "hbridge::Task").
#        #triggered. #try for avalon periodic to handle settings correct
#	periodic(0.001).
#        realtime.
#        priority(90)
#    task("can", "canbus::Task")
#    task("controldev", "controldev::Remote")
#    task("sysmon","sysmon::Task")
#    task("modem","Task").
#    	periodic(1)


    #do_not_install
    task("can", "canbus::Task").
        periodic(0.002)
    task("modem_test","Task").
	periodic(0.02)

    add_default_logger
end
